#!/usr/bin/env python
from Frame import Frame
import data
import cv2, os, numpy, argparse

def calculate_threshold(frame):
    total = [0, 0, 0]
    for row in frame:
        for pixel in row:
            for RGB in range(3):
                total[RGB] += pixel[RGB]

    for RGB in range(3):
        total[RGB] = total[RGB] // (len(frame)* len(frame[0]))
    average = (total[0] + total[1] + total[2]) // 3

    return average

def open_video(name):
    try:
        video = cv2.VideoCapture(name)
    except:
        print('Error: Open video')
    return video

def create_folder(name):
    try:
        if not os.path.exists(name):
            os.makedirs('../' + name)
    except OSError:
        print('Error: Create video directory')

def resize_image(image, width, height, new_width):
    ratio = height / width
    new_height = int(new_width * ratio)
    image = cv2.resize(image,(new_width, new_height))
    return image, new_width, new_height


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
            description='Simple script to convert video into ascii frames'
    )
    parser.add_argument(
            'video',
            help='Path of the video',
            type=str
            )
    parser.add_argument(
            '-s',
            '--size',
            help='Output size',
            type=int,
            default='300'
    )
    parser.add_argument(
            '-t',
            '--treshold',
            help='Choose threshold of the video',
            type=int,
            default=-1
    )
    parser.add_argument(
            '-n',
            '--negative',
            help='Negative filter',
            type=bool,
            default=False
    )
    parser.add_argument(
            '--skip-frames',
            help='Amount of frames to be skipped',
            type=int,
            default=0
    )

    arguments = parser.parse_args()
    new_image_width = arguments.size
    threshold = arguments.treshold
    negative = arguments.negative
    video_path = arguments.video
    skip_frames = arguments.skip_frames

    folder = 'video-txt'
    create_folder(folder)

    video = open_video(video_path)

    width = video.get(cv2.CAP_PROP_FRAME_WIDTH)
    height = video.get(cv2.CAP_PROP_FRAME_HEIGHT)
    fps = video.get(cv2.CAP_PROP_FPS)

    print('The video have', fps, 'fps')

    frameIndex = 0
    while(video.isOpened()):
        ret, frame = video.read()

        if not ret:
            break

        for x in range(skip_frames):
            video.read()

        frame, width, height = resize_image(frame, width, height, new_image_width)

        if threshold == -1:
            threshold = calculate_threshold(frame)

        frameClass = Frame(width, height, frame, threshold, negative)

        with open('../' + folder + '/' + str(frameIndex), 'w') as file:
            file.write(frameClass.frame_to_ascii())

        print("Frames done:", frameIndex)
        frameIndex += 1

    print("Frames done:", frameIndex)

    with open('../' + folder + '/' + str('info'), 'w') as file:
        file.write(str(frameIndex) + '\n')
        file.write('FPS: ' + str(fps))
    print('Video info created')

    print('Video was sucessful converted')
    exit(0)
