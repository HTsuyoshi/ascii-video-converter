#!/usr/bin/env python
from Frame import Frame
import os, sys, cv2, numpy, argparse
import data

def calculate_threshold_gray(frame):
    total = 0
    for row in frame:
        for pixel in row:
            total += pixel

    total = total // (len(frame)* len(frame[0]))
    return total

def open_video(name):
    try:
        open (name)
    except:
        print ("File does not exist")
        sys.exit(1)
    video = cv2.VideoCapture(name)
    if video is None or not video.isOpened():
        print('Warning: unable to open video source: ', name)
        sys.exit(1)
    return video

def resize_image(image, width, height, new_width):
    ratio = height / width
    new_height = int(new_width * ratio)
    image = cv2.resize(image,(new_width, new_height))
    return image, new_width, new_height


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
            description='Simple script to convert video into ascii frames'
    )
    parser.add_argument(
            'video',
            help='Path of the video',
            type=str
            )
    parser.add_argument(
            '-s',
            '--size',
            help='Output size',
            type=int,
            default='300'
    )
    parser.add_argument(
            '-t',
            '--treshold',
            help='Choose threshold of the video',
            type=int,
            default=-1
    )
    parser.add_argument(
            '-n',
            '--negative',
            help='Negative filter',
            type=bool,
            default=False
    )
    parser.add_argument(
            '--skip-frames',
            help='Amount of frames to be skipped',
            type=int,
            default=0
    )

    arguments = parser.parse_args()
    new_image_width = arguments.size
    threshold = arguments.treshold
    negative = arguments.negative
    video_path = arguments.video
    skip_frames = arguments.skip_frames

    auto_threshold = 0
    if threshold == -1:
        auto_threshold = 1


    video = open_video(video_path)
    width = video.get(cv2.CAP_PROP_FRAME_WIDTH)
    height = video.get(cv2.CAP_PROP_FRAME_HEIGHT)
    fps = video.get(cv2.CAP_PROP_FPS)

    print('The video has', fps, 'fps')

    frame_index = 0
    file_name = 'video.txt'
    video_file = open(f'/tmp/{file_name}', 'w')

    while(video.isOpened()):
        ret, frame = video.read()

        if not ret:
            break

        for x in range(skip_frames):
            video.read()

        frame, width, height = resize_image(frame, width, height, new_image_width)

        if auto_threshold == 1:
            gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
            threshold = calculate_threshold_gray(gray)

        frameClass = Frame(width, height, frame, threshold, negative)

        video_file.write(frameClass.frame_to_ascii())
        print(frameClass.frame_to_ascii())

        print("Frames done:", frame_index)
        frame_index += 1

    with open('/tmp/info.txt', 'w') as info_file:
        info_file.write('FPS: ' + str(fps) + '\n')
        info_file.write('Height: ' + str(height // 4) + '\n')
        info_file.write(str(frame_index) + '\n')
        info_file.close()

    print("Frames done:", frame_index)
    print('Video info created')
    print('Video was sucessful converted')
